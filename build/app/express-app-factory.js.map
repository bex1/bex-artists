{"version":3,"file":"express-app-factory.js","sourceRoot":"","sources":["../../src/app/express-app-factory.ts"],"names":[],"mappings":";;AAEA,iCAAoC;AACpC,wCAA2C;AAC3C,+BAAkC;AAClC,mCAAiD;AAEjD;IAIE;IAAuB,CAAC;IAEjB,+BAAa,GAApB,UACE,SAAoB,EACpB,SAAiB,EACjB,yBAAsE,EACtE,0BAAuE;QAEvE,IAAM,GAAG,GAAY,OAAO,EAAE,CAAC;QAE/B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACnD,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAE3B,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1B,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;YAClE,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpC,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACvC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAC5D,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,yBAAyB,IAAI,IAAI,CAAC,CAAC,CAAC;YACtC,0BAA0B,CAAC,OAAO,CAAC,UAAC,YAAY,IAAK,OAAA,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAArB,CAAqB,CAAC,CAAC;QAC9E,CAAC;QAED,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAE3B,EAAE,CAAC,CAAC,0BAA0B,IAAI,IAAI,CAAC,CAAC,CAAC;YACvC,0BAA0B,CAAC,OAAO,CAAC,UAAC,YAAY,IAAK,OAAA,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAArB,CAAqB,CAAC,CAAC;QAC9E,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IApCuB,wBAAM,GAAW,sBAAa,CAAC,SAAS,EAAE,CAAC;IAsCrE,wBAAC;CAAA,AAxCD,IAwCC;AAxCY,8CAAiB","sourcesContent":["import { Express, Router, RequestHandler, ErrorRequestHandler } from 'express';\nimport { AppConfig } from './config';\nimport express = require('express');\nimport bodyParser = require('body-parser');\nimport morgan = require('morgan');\nimport { Logger, LoggerFactory } from './common';\n\nexport class ExpressAppFactory {\n\n  private static readonly LOGGER: Logger = LoggerFactory.getLogger();\n\n  private constructor() {}\n\n  static getExpressApp(\n    appConfig: AppConfig,\n    apiRouter: Router,\n    preApiRouterMiddlewareFns: Array<RequestHandler | ErrorRequestHandler>,\n    postApiRouterMiddlewareFns: Array<RequestHandler | ErrorRequestHandler>): Express {\n\n    const app: Express = express();\n\n    app.use(bodyParser.urlencoded({ extended: true }));\n    app.use(bodyParser.json());\n\n    if (appConfig.serveStatic) {\n      ExpressAppFactory.LOGGER.info(`Serving static files from public`);\n      app.use(express.static('public'));\n    }\n\n    if (appConfig.enableHttpRequestLogging) {\n      ExpressAppFactory.LOGGER.info(`Request logging is enabled`);\n      app.use(morgan('combined'));\n    }\n\n    if (preApiRouterMiddlewareFns != null) {\n      postApiRouterMiddlewareFns.forEach((middlewareFn) => app.use(middlewareFn));\n    }\n\n    app.use('/api', apiRouter);\n\n    if (postApiRouterMiddlewareFns != null) {\n      postApiRouterMiddlewareFns.forEach((middlewareFn) => app.use(middlewareFn));\n    }\n\n    return app;\n  }\n\n}\n"]}